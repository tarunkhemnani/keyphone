:root{
  --bg: #000000;

  /* keypad sizing & placement */
  --circle-size: 80px;
  --gap-x: 20px;
  --gap-y: 16px;
  --overlay-offset-x: 0px;
  --overlay-offset-y: 260px;

  /* press fade duration */
  --press-fade-ms: 300ms;

  /* typography */
  --digit-size: 36px;        /* main digit size */
  --digit-weight: 400;       /* thin look */
  --letters-size: 11px;
  --letters-color: #F7F7F7;  /* exact requested text color */
  --letters-weight: 600;
  --letters-spacing: 1.6px;

  --nav-height: 78px;
  --nav-item-offset: 70px;
  --nav-extra-space: max(0px, calc(var(--nav-item-offset) - 22px));
  --nav-bottom-normal: 12px;
}

/* reset */
* { box-sizing: border-box; }
html,body{
  height:100%;
  margin:0;
  background:var(--bg);
  color:#fff;
  font-family:-apple-system,BlinkMacSystemFont,"SF Pro Text","SF Pro Display",system-ui,"Segoe UI",Roboto,Arial,sans-serif;
  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
  -webkit-text-size-adjust:100%;
}

/* app background */
.app{
  position:fixed;
  left:0; right:0; top:0;
  height: var(--app-viewport-height, 100svh);
  min-height: var(--app-viewport-height, 100svh);
  background-image: url('screenshot.png');
  background-repeat: no-repeat;
  background-position: center top;
  background-size: cover;
  overflow:hidden;
  touch-action: manipulation;
}

/* typed-digit display */
.display{
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  transform: translateY(calc(var(--overlay-offset-y) - 96px));
  width:100%;
  height:48px;
  display:flex;
  align-items:center;
  justify-content:center;
  color:var(--letters-color);
  font-size:20px;
  letter-spacing:2px;
  font-weight:600;
  pointer-events:none;
  opacity:0;
  transition: opacity 140ms ease, transform 120ms ease;
}

/* wrapper */
.keypad-wrap{ position:absolute; inset:0; display:flex; flex-direction:column; align-items:center; justify-content:flex-start; pointer-events:none; }

/* grid */
.keys-grid{
  width: calc((3 * var(--circle-size)) + (2 * var(--gap-x)));
  margin: 0 auto;
  margin-top: 6px;
  display:grid;
  grid-template-columns: repeat(3, var(--circle-size));
  grid-template-rows: repeat(4, var(--circle-size));
  column-gap: var(--gap-x);
  row-gap: var(--gap-y);
  justify-items:center;
  align-items:center;
  pointer-events:auto;
  transform: translate(var(--overlay-offset-x), var(--overlay-offset-y));
  will-change: transform;
}

/* KEY BASE */
.key{
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 999px;
  background-color: #343434;   /* matte fill */
  box-shadow: none;
  border: none !important;
  background-clip: padding-box;

  display:flex;
  flex-direction:column;
  justify-content:center;
  align-items:center;
  gap: 0px;

  cursor:pointer;
  -webkit-tap-highlight-color: transparent;
  pointer-events:auto;
  user-select:none;

  /* fade back on release */
  transition:
    background-color var(--press-fade-ms) linear,
    color var(--press-fade-ms) linear;
  will-change: background-color, color;
}

/* pressed/peak */
.key.pressed,
.key:active {
  background-color: #7c7c7c;
}

/* main digits */
.digit{
  display:block;
  text-align:center;
  font-family: -apple-system, "SF Pro Text", "SF Pro Display", system-ui, "Segoe UI", Roboto, Arial, sans-serif;
  font-size: var(--digit-size);
  font-weight: var(--digit-weight);
  font-style: normal;
  color: var(--letters-color);
  line-height: 1;
  margin: 0;
  padding: 0;
  align-self: center;
  pointer-events: none;
  text-shadow: none;
  letter-spacing: 0.2px;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
  transition: color var(--press-fade-ms) linear;
}

/* digit color at peak */
.key.pressed .digit,
.key:active .digit { color: #FFFFFF; }

/* letters */
.letters{
  display:block;
  text-align:center;
  font-size: var(--letters-size);
  color: var(--letters-color);
  letter-spacing: var(--letters-spacing);
  text-transform: uppercase;
  font-weight: var(--letters-weight);
  margin: 0;
  padding: 0;
  align-self: center;
  pointer-events: none;
  text-shadow: none;
  transition: color var(--press-fade-ms) linear;
}
.key .letters:empty{ display:none; }
.key.pressed .letters, .key:active .letters { color:#FFFFFF; }

/* ---------- ASTERISK: larger & centered ----------
   textual asterisk kept; increased size & small nudge for visual centering
--------------------------------------------------*/
.key[data-value="*"] .digit {
  text-indent: 0;
  white-space: normal;
  overflow: visible;

  /* larger than digits so it reads prominent */
  font-size: calc(var(--digit-size) * 0.98); /* 98% of digit size */
  font-weight: 500;
  font-style: normal;
  line-height: 1;
  letter-spacing: 0;
  color: var(--letters-color);
  display: block;
  text-align: center;
  align-self: center;
  margin: 0;
  padding: 0;
  pointer-events: none;

  /* remove any previous mask/background image */
  background-image: none !important;
  -webkit-mask: none !important;
  mask: none !important;

  /* slightly nudge up by 1px to visually center in some devices */
  transform: translateY(-1px);

  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: geometricPrecision;
  transition: color var(--press-fade-ms) linear;
}
.key[data-value="*"].pressed .digit,
.key[data-value="*"]:active .digit { color: #FFFFFF; }

/* ---------- HASH: replace with precise SVG background ----------
   keep textual # for a11y but hide visually and show a straight SVG hash
   so it is perfectly upright and consistent across devices.
--------------------------------------------------*/
.key[data-value="#"] .digit {
  /* keep the char for screen readers but hide visually */
  text-indent: -9999px;
  white-space: nowrap;
  overflow: hidden;

  width: 30px;
  height: 30px;
  display: block;
  align-self: center;
  margin: 0;
  padding: 0;
  pointer-events: none;

  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;

  /* straight hash SVG (light stroke) as default (uses hex escaped #) */
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><g fill='none' stroke='%23F7F7F7' stroke-width='1.9' stroke-linecap='round' stroke-linejoin='round'><line x1='9' y1='2' x2='9' y2='22'/><line x1='15' y1='2' x2='15' y2='22'/><line x1='2' y1='9' x2='22' y2='9'/><line x1='2' y1='15' x2='22' y2='15'/></g></svg>");
  transition: background-color var(--press-fade-ms) linear;
}

/* pressed state: swap the SVG to white strokes for peak color */
.key[data-value="#"].pressed .digit,
.key[data-value="#"]:active .digit {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'><g fill='none' stroke='%23FFFFFF' stroke-width='1.9' stroke-linecap='round' stroke-linejoin='round'><line x1='9' y1='2' x2='9' y2='22'/><line x1='15' y1='2' x2='15' y2='22'/><line x1='2' y1='9' x2='22' y2='9'/><line x1='2' y1='15' x2='22' y2='15'/></g></svg>");
}

/* ensure there's no residual transform or italic style on # */
.key[data-value="#"] .digit {
  transform: none !important;
  font-style: normal !important;
}

/* ensure # has accessible fallback if background-image blocked */
@supports (-webkit-mask: none) {
  /* no-op; background svg is primary. */
}

/* hide call UI completely */
.call-row, .call-button {
  display: none !important;
  visibility: hidden !important;
  pointer-events: none !important;
}

/* bottom nav */
.bottom-nav{
  position: fixed;
  left:0; right:0;
  bottom: 0;
  height: calc(var(--nav-height) + var(--nav-extra-space) + var(--nav-bottom-normal) + env(safe-area-inset-bottom));
  display:flex;
  justify-content: space-around;
  align-items:flex-end;
  padding-bottom: calc(env(safe-area-inset-bottom, 12px) + 6px);
  background: linear-gradient(180deg, rgba(0,0,0,1), rgba(0,0,0,1));
  pointer-events:auto;
  z-index: 20;
  box-shadow: 0 -6px 18px rgba(0,0,0,0.25) inset;
  transform: translate(var(--overlay-offset-x), calc(var(--overlay-offset-y) + 900px));
}

.nav-item{
  display:flex;
  flex-direction:column;
  align-items:center;
  gap:5px;
  font-size:12px;
  color:#9b9b9b;
  pointer-events:auto;
  position: relative;
  top: var(--nav-item-offset);
  transition: top 180ms ease;
  z-index: 30;
}
.nav-item svg{ width:26px; height:26px; fill: currentColor; display:block; }
.nav-item span{ font-size:11px; color:inherit; margin-top:2px; }
.nav-item.active{ color:#0a84ff; }

/* focus outlines */
.key:focus, .nav-item:focus { outline: 2px solid rgba(255,255,255,0.06); outline-offset:4px; }

/* reduced motion */
@media (prefers-reduced-motion: reduce){
  .key, .key.pressed, .key:active, .nav-item{ transition:none; box-shadow:none; }
}

/* small screens */
@media (max-width:360px){
  :root{
    --circle-size:68px;
    --gap-x:14px;
    --gap-y:12px;
    --overlay-offset-y: 240px;
    --digit-size: 28px;
    --letters-size: 11px;
    --nav-item-offset: 26px;
    --grid-w: calc((3 * var(--circle-size)) + (2 * var(--gap-x)));
    --letters-spacing: 1.2px;
  }
  .key { gap: 0px; }
  .key[data-value="*"] .digit { font-size: calc(var(--digit-size) * 0.96); transform: translateY(-1px); }
  .key[data-value="#"] .digit { width: 26px; height: 26px; background-size: contain; }
}
