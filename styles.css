:root{
  --bg: #000000;

  /* keypad sizing & placement */
  --circle-size: 80px;
  --gap-x: 20px;
  --gap-y: 16px;
  --overlay-offset-x: 0px;
  --overlay-offset-y: 260px;

  /* press fade duration */
  --press-fade-ms: 300ms;

  /* derived sizes */
  --grid-h: calc((4 * var(--circle-size)) + (3 * var(--gap-y)));
  --grid-w: calc((3 * var(--circle-size)) + (2 * var(--gap-x)));

  /* call button vars (hidden) */
  --call-size: 76px;
  --call-color: #2fd55b;
  --call-lift: -14px;

  /* typography */
  --digit-size: 36px;        /* main digit size */
  --digit-weight: 400;       /* reduced thickness for a thin look */
  --letters-size: 11px;
  --letters-color: #F7F7F7;  /* exact requested text color */
  --letters-weight: 600;     /* slightly lighter */
  --letters-spacing: 1.6px;  /* tightened spacing between letters */

  --nav-height: 78px;
  --nav-item-offset: 70px;
  --nav-extra-space: max(0px, calc(var(--nav-item-offset) - 22px));
  --nav-bottom-normal: 12px;
}

/* reset */
* { box-sizing: border-box; }
html,body{
  height:100%;
  margin:0;
  background:var(--bg);
  color:#fff;
  font-family:-apple-system,BlinkMacSystemFont,"SF Pro Text","SF Pro Display",system-ui,"Segoe UI",Roboto,Arial,sans-serif;
  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
  -webkit-text-size-adjust:100%;
}

/* app background (screenshot by default) */
.app{
  position:fixed;
  left:0;
  right:0;
  top:0;
  height: var(--app-viewport-height, 100svh);
  min-height: var(--app-viewport-height, 100svh);
  background-image: url('screenshot.png');
  background-repeat: no-repeat;
  background-position: center top;
  background-size: cover;
  overflow:hidden;
  touch-action: manipulation;
}

/* typed-digit display (small top display when typing) */
.display{
  position: absolute;
  left: 0;
  right: 0;
  top: 0;
  transform: translateY(calc(var(--overlay-offset-y) - 96px));
  width:100%;
  height:48px;
  display:flex;
  align-items:center;
  justify-content:center;
  color:var(--letters-color);
  font-size:20px;
  letter-spacing:2px;
  font-weight:600;
  pointer-events:none;
  opacity:0;
  transition: opacity 140ms ease, transform 120ms ease;
}

/* wrapper */
.keypad-wrap{
  position:absolute;
  inset:0;
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:flex-start;
  pointer-events:none;
}

/* grid */
.keys-grid{
  width: var(--grid-w);
  margin: 0 auto;
  margin-top: 6px;
  display:grid;
  grid-template-columns: repeat(3, var(--circle-size));
  grid-template-rows: repeat(4, var(--circle-size));
  column-gap: var(--gap-x);
  row-gap: var(--gap-y);
  justify-items:center;
  align-items:center;
  pointer-events:auto;
  transform: translate(var(--overlay-offset-x), var(--overlay-offset-y));
  will-change: transform;
}

/* ============================
   KEY BASE (flat matte buttons)
   - solid matte fill #343434
   - no outer gradients or heavy shadows
   - gap between digit and letters = 0px (very tight)
   - no transform on press; press color jump handled by JS & instant transition removal
   - release fades back over --press-fade-ms
   ============================ */
.key{
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 999px;
  background-color: #343434;   /* matte fill */
  box-shadow: none;
  border: none !important;
  background-clip: padding-box;

  display:flex;
  flex-direction:column;
  justify-content:center; /* vertical center of group */
  align-items:center;     /* horizontal center */
  gap: 0px;               /* digit and letters very close (0px) */

  cursor:pointer;
  -webkit-tap-highlight-color: transparent;
  pointer-events:auto;
  user-select:none;

  /* transition only affects color/background-color (fade back on release) */
  transition:
    background-color var(--press-fade-ms) linear,
    color var(--press-fade-ms) linear;
  will-change: background-color, color;
}

/* pressed state (peak) — JS makes this appear instantly by removing transition prior to adding .pressed */
.key.pressed,
.key:active {
  background-color: #7c7c7c; /* peak pressed color */
  /* intentionally no transform or shadow to avoid visual shift */
}

/* ----------------------------
   MAIN DIGIT (1..9, 0, #, *) as text
   - centered, thin weight
   - larger than letters but cohesive
   ---------------------------- */
.digit{
  display:block;
  text-align:center;
  font-size: var(--digit-size);
  font-weight: var(--digit-weight);
  color: var(--letters-color);
  line-height: 1;
  margin: 0;
  padding: 0;
  align-self: center;
  pointer-events: none;
  text-shadow: none; /* no shadow for thin look */
  letter-spacing: 0.2px;
  transition: color var(--press-fade-ms) linear;
}

/* digit color at pressed peak */
.key.pressed .digit,
.key:active .digit {
  color: #FFFFFF;
}

/* ----------------------------
   LETTERS (ABC, DEF, etc.)
   - small, centered, tightened spacing
   - visually close to the digit (gap 0)
   ---------------------------- */
.letters{
  display:block;
  text-align:center;
  font-size: var(--letters-size);
  color: var(--letters-color);
  letter-spacing: var(--letters-spacing);
  text-transform: uppercase;
  font-weight: var(--letters-weight);
  margin: 0;
  padding: 0;
  align-self: center;
  pointer-events: none;
  text-shadow: none;
  transition: color var(--press-fade-ms) linear;
}

/* hide empty labels to keep symbols (*) and (#) vertically centered */
.key .letters:empty{ display:none; }

/* letters become white at peak press */
.key.pressed .letters,
.key:active .letters {
  color: #FFFFFF;
}

/* small weight bump for # and * for legibility */
.key[data-value="#"] .digit { font-weight: 500; }
.key[data-value="*"] .digit { font-weight: 500; }

/* ----------------------------
   ASTERISK (*) AS TEXT GLYPH
   - IMPORTANT: use the textual asterisk (system glyph) — not an icon
   - slightly smaller than digit (78% of digit size) to match screenshot
   - centered and follows same color behavior as digits
   ---------------------------- */
.key[data-value="*"] .digit {
  /* keep the character visible as text for exact match */
  text-indent: 0;
  white-space: normal;
  overflow: visible;

  /* slightly smaller than the main digits to match your screenshot */
  font-size: calc(var(--digit-size) * 0.78);
  font-weight: 500;
  line-height: 1;
  letter-spacing: 0;
  color: var(--letters-color);
  display: block;
  text-align: center;
  align-self: center;
  margin: 0;
  padding: 0;
  pointer-events: none;

  /* ensure any previous mask/background fallback is removed */
  background-image: none !important;
  -webkit-mask: none !important;
  mask: none !important;

  transition: color var(--press-fade-ms) linear;
}

/* pressed asterisk color */
.key[data-value="*"].pressed .digit,
.key[data-value="*"]:active .digit {
  color: #FFFFFF;
}

/* ----------------------------
   remove call UI completely (hidden)
   ---------------------------- */
.call-row,
.call-button {
  display: none !important;
  visibility: hidden !important;
  pointer-events: none !important;
}

/* bottom nav (visual-only) */
.bottom-nav{
  position: fixed;
  left:0; right:0;
  bottom: 0;
  height: calc(var(--nav-height) + var(--nav-extra-space) + var(--nav-bottom-normal) + env(safe-area-inset-bottom));
  display:flex;
  justify-content: space-around;
  align-items:flex-end;
  padding-bottom: calc(env(safe-area-inset-bottom, 12px) + 6px);
  background: linear-gradient(180deg, rgba(0,0,0,1), rgba(0,0,0,1));
  pointer-events:auto;
  z-index: 20;
  box-shadow: 0 -6px 18px rgba(0,0,0,0.25) inset;
  transform: translate(var(--overlay-offset-x), calc(var(--overlay-offset-y) + 900px));
}

.nav-item{
  display:flex;
  flex-direction:column;
  align-items:center;
  gap:5px;
  font-size:12px;
  color:#9b9b9b;
  pointer-events:auto;
  position: relative;
  top: var(--nav-item-offset);
  transition: top 180ms ease;
  z-index: 30;
}
.nav-item svg{ width:26px; height:26px; fill: currentColor; display:block; }
.nav-item span{ font-size:11px; color:inherit; margin-top:2px; }
.nav-item.active{ color:#0a84ff; }

/* focus outlines (accessibility) */
.key:focus, .nav-item:focus { outline: 2px solid rgba(255,255,255,0.06); outline-offset:4px; }

/* reduced motion: disable transitions for users who prefer less motion */
@media (prefers-reduced-motion: reduce){
  .key, .key.pressed, .key:active, .nav-item{ transition:none; box-shadow:none; }
}

/* small screens adjustments */
@media (max-width:360px){
  :root{
    --circle-size:68px;
    --gap-x:14px;
    --gap-y:12px;
    --overlay-offset-y: 240px;
    --grid-h: calc((4 * var(--circle-size)) + (3 * var(--gap-y)));
    --digit-size: 28px;
    --letters-size: 11px;
    --call-size:64px;
    --nav-item-offset: 26px;
    --nav-extra-space: max(0px, calc(var(--nav-item-offset) - 22px));
    --grid-w: calc((3 * var(--circle-size)) + (2 * var(--gap-x)));
    --letters-spacing: 1.2px;
  }
  .nav-item svg{ width:22px; height:22px; }
  .display{ transform: translateY(calc(var(--overlay-offset-y) - 80px)); font-size:18px; }
  .key { gap: 0px; }
  .key[data-value="*"] .digit { font-size: calc(var(--digit-size) * 0.78); }
}
