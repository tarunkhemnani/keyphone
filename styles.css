:root{
  --bg: #000000;

  /* layout sizing (tweak these if your screenshot layout differs) */
  --circle-size: 76px;
  --gap-x: 34px;
  --gap-y: 22px;
  --digit-size: 42px;
  --digit-weight: 500;

  /* visual overlay offsets — used for calibration */
  --overlay-offset-x: 0px;
  --overlay-offset-y: 0px;

  /* call button lift when needed */
  --call-lift: -32px;
}

/* base */
*{box-sizing:border-box}
html,body{
  height:100%;
  margin:0;
  background:var(--bg);
  font-family: -apple-system,BlinkMacSystemFont,"SF Pro Text","SF Pro Display",system-ui, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
}

/* Use the screenshot as the full-screen background.
   This keeps the visible image exactly as you provided. */
.app{
  position:fixed;
  inset:0;
  background-image: url('screenshot.png'); /* your screenshot file */
  background-repeat: no-repeat;
  background-position: center top; /* adjust if needed */
  background-size: cover; /* you can change to 'contain' if you prefer */
  touch-action: manipulation;
  -webkit-user-select: none;
  user-select: none;
  overflow:hidden;
}

/* keep a transparent top-safe area so system status bar reads correctly */
.top-safe{ height: env(safe-area-inset-top); }

/* hidden display (we keep for debugging or accessibility) */
.display{
  width:100%;
  height:48px;
  margin-top: 6px;
  display:flex;
  align-items:center;
  justify-content:center;
  color:#fff;
  font-size:22px;
  letter-spacing:2px;
  font-weight:500;
  opacity:0;
  pointer-events:none;
}

/* The interactive grid sits on top of the screenshot.
   Buttons are transparent so screenshot remains visible. */
.keypad-wrap{
  position:absolute;
  left:0; right:0;
  top:0; bottom:0;
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  pointer-events:none; /* enable pointer-events selectively on controls */
}

/* grid width matches your circle sizes — tweak if alignment needed */
.keys-grid{
  width: calc( (3 * var(--circle-size)) + (2 * var(--gap-x)) );
  margin: 0 auto;
  display:grid;
  grid-template-columns: repeat(3, var(--circle-size));
  grid-template-rows: repeat(4, var(--circle-size));
  column-gap: var(--gap-x);
  row-gap: var(--gap-y);
  justify-items:center;
  align-items:center;
  pointer-events:auto; /* accept taps */
  /* Calibration offset: move the whole overlay to match screenshot */
  transform: translate(var(--overlay-offset-x), var(--overlay-offset-y));
}

/* Transparent buttons: no visible background so screenshot shines through */
.key{
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 999px;
  display:flex;
  flex-direction:column;
  align-items:center;
  justify-content:center;
  border:none;
  background: transparent;
  cursor:pointer;
  transition: transform 120ms ease, background-color 120ms ease;
  -webkit-tap-highlight-color: transparent;
  pointer-events:auto;
  user-select:none;
}

/* On press show a subtle highlight so user gets feedback (semi-transparent) */
.key.pressed{
  transform: scale(0.98);
  background: rgba(255,255,255,0.04); /* subtle highlight */
}

/* digits are kept in DOM for accessibility but can be hidden visually */
.digit{
  font-size: var(--digit-size);
  font-weight: var(--digit-weight);
  color: rgba(255,255,255,0.0001); /* visually invisible but available for screen readers */
  line-height:1;
  margin-top:-2px;
  letter-spacing:0.2px;
  pointer-events:none;
}
.letters{
  font-size: 11px;
  color: rgba(255,255,255,0.0001);
  margin-top:6px;
  pointer-events:none;
}

/* Call button overlay — keep transparent but still receives taps */
.call-row{
  width: calc(var(--call-size,84px));
  margin: 0 auto;
  margin-top: 6px;
  display:flex;
  justify-content:center;
  pointer-events:none;
  position: relative;
  transform: translate(var(--overlay-offset-x), var(--overlay-offset-y));
}
.call-button{
  width:84px;
  height:84px;
  border-radius:999px;
  background: transparent;
  border: none;
  cursor:pointer;
  pointer-events:auto;
  display:flex;
  align-items:center;
  justify-content:center;
  transform: translateY(var(--call-lift));
  transition: transform 120ms ease;
  -webkit-tap-highlight-color: transparent;
}
.call-button svg { width:48px; height:48px; opacity:0; /* invisible but present */ }

/* bottom nav overlay — invisible items placed to match screenshot bottom icons */
.bottom-nav{
  position: absolute;
  left: 0;
  right: 0;
  bottom: calc(env(safe-area-inset-bottom)); /* sit above safe area so taps are available */
  height: calc(var(--nav-area, 96px));
  display:flex;
  justify-content: space-around;
  align-items:center;
  pointer-events:auto;
  transform: translate(var(--overlay-offset-x), var(--overlay-offset-y));
}
.nav-item{
  width: 56px;
  height: 56px;
  border-radius: 999px;
  background: transparent;
  pointer-events:auto;
}

/* pressed feedback for nav items (subtle) */
.nav-item:active, .nav-item.pressed {
  background: rgba(255,255,255,0.03);
}

/* calibration UI (hidden by default) */
.calibration-ui{
  position: fixed;
  left: 50%;
  transform: translateX(-50%);
  bottom: 18px;
  background: rgba(0,0,0,0.6);
  color: #fff;
  padding: 8px 12px;
  border-radius: 8px;
  font-size: 13px;
  display:none;
  z-index: 9999;
}
.calibration-ui.show { display:block; }

/* small-screen tweaks */
@media (max-width:360px){
  :root{
    --circle-size:70px;
    --digit-size:38px;
  }
  .nav-item { width:48px; height:48px; }
}

/* accessibility: make sure elements can be focused */
.key:focus, .nav-item:focus, #callBtn:focus { outline: 2px solid rgba(255,255,255,0.08); outline-offset: 2px; }
