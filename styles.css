:root{
  --bg: #000000;

  /* keep button size and layout as requested */
  --circle-size: 80px;
  --gap-x: 20px;
  --gap-y: 16px;
  --overlay-offset-x: 0px;
  --overlay-offset-y: 260px;

  /* visual timing */
  --press-fade-ms: 300ms;

  /* typography */
  --digit-size: 36px;            /* main digit size */
  --digit-weight: 400;          /* thin but legible */
  --letters-size: 11px;
  --letters-color: #F7F7F7;     /* exact requested color for text */
  --letters-weight: 600;
  --letters-spacing: 1.6px;

  /* colors */
  --key-fill: #3b3b3b;          /* match screenshot matte grey */
  --key-pressed: #7c7c7c;       /* pressed peak color */

  --nav-height: 78px;
  --nav-item-offset: 70px;
  --nav-extra-space: max(0px, calc(var(--nav-item-offset) - 22px));
  --nav-bottom-normal: 12px;
}

/* reset */
* { box-sizing: border-box; }
html,body{
  height:100%;
  margin:0;
  background:var(--bg);
  color:#fff;
  font-family: -apple-system, BlinkMacSystemFont, "SF Pro Text", "SF Pro Display", system-ui, "Segoe UI", Roboto, Arial, sans-serif;
  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
  -webkit-text-size-adjust:100%;
}

/* app background */
.app{
  position:fixed;
  left:0;
  right:0;
  top:0;
  height: var(--app-viewport-height, 100svh);
  min-height: var(--app-viewport-height, 100svh);
  background-image: url('screenshot.png');
  background-repeat: no-repeat;
  background-position: center top;
  background-size: cover;
  overflow:hidden;
  touch-action: manipulation;
}

/* small top display */
.display{
  position:absolute;
  left:0; right:0; top:0;
  transform: translateY(calc(var(--overlay-offset-y) - 96px));
  width:100%;
  height:48px;
  display:flex;
  align-items:center;
  justify-content:center;
  color:var(--letters-color);
  font-size:20px;
  letter-spacing:2px;
  font-weight:600;
  pointer-events:none;
  opacity:0;
  transition: opacity 140ms ease, transform 120ms ease;
}

/* wrapper */
.keypad-wrap{ position:absolute; inset:0; display:flex; flex-direction:column; align-items:center; justify-content:flex-start; pointer-events:none; }

/* grid */
.keys-grid{
  width: calc((3 * var(--circle-size)) + (2 * var(--gap-x)));
  margin:0 auto;
  margin-top:6px;
  display:grid;
  grid-template-columns: repeat(3, var(--circle-size));
  grid-template-rows: repeat(4, var(--circle-size));
  column-gap: var(--gap-x);
  row-gap: var(--gap-y);
  justify-items:center;
  align-items:center;
  pointer-events:auto;
  transform: translate(var(--overlay-offset-x), var(--overlay-offset-y));
  will-change: transform;
}

/* ---------- KEY BASE (matte) ---------- */
.key{
  width: var(--circle-size);
  height: var(--circle-size);
  border-radius: 999px;
  background-color: var(--key-fill);   /* matte grey */
  border: none !important;
  box-shadow: none;
  background-clip: padding-box;

  display:flex;
  flex-direction:column;
  justify-content:center;   /* center the digit+letters as group */
  align-items:center;
  gap: 0px;                 /* very tight: digit + letters sit close */

  cursor:pointer;
  -webkit-tap-highlight-color: transparent;
  pointer-events:auto;
  user-select:none;

  /* animate fade back on release only */
  transition:
    background-color var(--press-fade-ms) linear,
    color var(--press-fade-ms) linear;
  will-change: background-color, color;
}

/* pressed visual (peak) */
.key.pressed,
.key:active {
  background-color: var(--key-pressed);
  /* no transforms — avoid shift entirely */
}

/* ---------- MAIN DIGIT ---------- */
.digit{
  display:block;
  text-align:center;
  font-family: -apple-system, BlinkMacSystemFont, "SF Pro Text", "SF Pro Display", system-ui, "Segoe UI", Roboto, Arial, sans-serif;
  font-size: var(--digit-size);
  font-weight: var(--digit-weight);
  font-style: normal;
  color: var(--letters-color);
  line-height:1;
  margin:0;
  padding:0;
  align-self:center;
  pointer-events:none;
  text-shadow:none;
  letter-spacing: 0.2px;
  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
  text-rendering:optimizeLegibility;
  transition: color var(--press-fade-ms) linear;
}

/* digit color at peak */
.key.pressed .digit,
.key:active .digit { color: #FFFFFF; }

/* ---------- LETTERS (ABC etc) ---------- */
.letters{
  display:block;
  text-align:center;
  font-size: var(--letters-size);
  color: var(--letters-color);
  letter-spacing: var(--letters-spacing);
  text-transform: uppercase;
  font-weight: var(--letters-weight);
  margin:0;
  padding:0;
  align-self:center;
  pointer-events:none;
  transition: color var(--press-fade-ms) linear;
}

/* hide empty letters for perfect centering on * and # */
.key .letters:empty{ display:none; }

.key.pressed .letters,
.key:active .letters { color:#FFFFFF; }

/* ---------- ASTERISK (*) tuning ----------
   Use text glyph. Increase size and slightly adjust vertical position
   so it visually matches the screenshot.
-----------------------------------------*/
.key[data-value="*"] .digit {
  /* keep the glyph as text for exact match and accessibility */
  text-indent: 0;
  white-space: normal;
  overflow: visible;

  /* increased slightly above earlier values to better match screenshot */
  font-size: calc(var(--digit-size) * 1.00); /* ~100% of digit size to appear larger */
  font-weight: 500;
  font-style: normal;
  line-height: 1;
  letter-spacing: 0;
  color: var(--letters-color);
  display:block;
  text-align:center;
  align-self:center;
  margin:0;
  padding:0;
  pointer-events:none;

  /* small vertical nudge to visually center the asterisk with its ring */
  transform: translateY(-2px);

  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
  text-rendering:geometricPrecision;
  transition: color var(--press-fade-ms) linear;
}

.key[data-value="*"].pressed .digit,
.key[data-value="*"]:active .digit { color:#FFFFFF; }

/* ---------- HASH (#) tuning ----------
   Use textual hash but force upright, non-italic, consistent weight and spacing.
   Adjust line-height and letter-spacing so # appears straight and balanced.
-----------------------------------------*/
.key[data-value="#"] .digit{
  /* keep textual # in DOM for accessibility but style it for perfect straight rendering */
  text-indent: 0;
  white-space: normal;
  overflow: visible;

  /* slightly reduced size compared to the main digit to match screenshot proportion */
  font-size: calc(var(--digit-size) * 0.95);
  font-weight: 500;           /* slightly bolder so lines look crisp */
  font-style: normal !important; /* ensure not italic */
  font-variant-ligatures: normal;
  letter-spacing: -0.2px;     /* tighten horizontal spacing so the glyph looks straight */
  line-height: 1;
  text-align: center;
  color: var(--letters-color);
  display:block;
  align-self:center;
  margin:0;
  padding:0;
  pointer-events:none;

  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
  text-rendering:geometricPrecision;

  /* no transform; rely on font and spacing to render straight */
  transform: none !important;
}

/* ensure pressed state for # becomes white */
.key[data-value="#"].pressed .digit,
.key[data-value="#"]:active .digit { color:#FFFFFF; }

/* As a fallback for any platform where the # glyph still looks slanted,
   you can replace with the SVG background approach — but textual first attempt
   is kept for font fidelity and accessibility. */

/* ---------- remove call UI completely ---------- */
.call-row, .call-button { display:none !important; visibility:hidden !important; pointer-events:none !important; }

/* bottom nav (visual-only) */
.bottom-nav{
  position: fixed;
  left:0; right:0; bottom: 0;
  height: calc(var(--nav-height) + var(--nav-extra-space) + var(--nav-bottom-normal) + env(safe-area-inset-bottom));
  display:flex;
  justify-content: space-around;
  align-items:flex-end;
  padding-bottom: calc(env(safe-area-inset-bottom, 12px) + 6px);
  background: linear-gradient(180deg, rgba(0,0,0,1), rgba(0,0,0,1));
  pointer-events:auto;
  z-index: 20;
  box-shadow: 0 -6px 18px rgba(0,0,0,0.25) inset;
  transform: translate(var(--overlay-offset-x), calc(var(--overlay-offset-y) + 900px));
}
.nav-item{ display:flex; flex-direction:column; align-items:center; gap:5px; font-size:12px; color:#9b9b9b; pointer-events:auto; position: relative; top: var(--nav-item-offset); transition: top 180ms ease; z-index: 30; }
.nav-item svg{ width:26px; height:26px; fill: currentColor; display:block; }
.nav-item span{ font-size:11px; color:inherit; margin-top:2px; }
.nav-item.active{ color:#0a84ff; }

/* accessibility outlines */
.key:focus, .nav-item:focus { outline: 2px solid rgba(255,255,255,0.06); outline-offset:4px; }

/* reduced motion users */
@media (prefers-reduced-motion: reduce){
  .key, .key.pressed, .key:active, .nav-item{ transition:none; box-shadow:none; }
}

/* smaller screens adjustments */
@media (max-width:360px){
  :root{
    --circle-size:68px;
    --gap-x:14px;
    --gap-y:12px;
    --overlay-offset-y: 240px;
    --digit-size: 28px;
    --letters-size: 11px;
    --nav-item-offset: 26px;
    --grid-w: calc((3 * var(--circle-size)) + (2 * var(--gap-x)));
    --letters-spacing: 1.2px;
  }
  .key { gap: 0px; }
  .key[data-value="*"] .digit { font-size: calc(var(--digit-size) * 1.00); transform: translateY(-1px); }
  .key[data-value="#"] .digit { font-size: calc(var(--digit-size) * 0.95); }
}
